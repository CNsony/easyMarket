{"version":3,"sources":["config/rem.js","components/AsyncComponent/index.js","router/index.js","components/tab/index.js","config/history.js","page/login/index.js","page/App/index.js","serviceWorker.js","redux/reducers/home.js","redux/reducers/common.js","redux/reducers/topic.js","redux/reducers/categorys.js","redux/reducers/catalog.js","redux/reducers/goods.js","redux/reducers/brand.js","redux/reducers/topicDetail.js","redux/reducers/comment.js","redux/reducers/goodsSearch.js","redux/reducers/collect.js","redux/reducers/index.js","redux/sagas/request.js","redux/sagas/home.js","redux/sagas/topic.js","redux/sagas/categorys.js","redux/sagas/catalog.js","redux/sagas/goods.js","redux/sagas/brand.js","redux/sagas/topicDetail.js","redux/sagas/comment.js","redux/sagas/goodsSearch.js","redux/sagas/collect.js","redux/sagas/index.js","index.js","redux/actions/actionTypes.js","redux/actions/common.js","http/http.js","http/index.js"],"names":["designWidth","rem2px","d","window","document","createElement","style","width","display","head","getElementsByTagName","appendChild","defaultFontSize","parseFloat","getComputedStyle","getPropertyValue","remove","documentElement","fontSize","innerWidth","st","portrait","landscape","innerHeight","innerHTML","adapt","asyncComponent","importComponent","_Component","AsyncComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","component","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","_ref","wrap","_context","prev","next","sent","default","setState","stop","apply","arguments","C","react_default","Component","routes","name","isTab","link","Promise","all","__webpack_require__","e","then","bind","Tab","item","history","push","url","_this$props","tabList","pathname","location","showTab","forEach","index","className","map","onClick","changeIndex","icon","withRouter","createHistory","Login","mobile","refs","phoneNumber","password","passwords","http","postLogin","errno","data","errmsg","localStorage","setItem","sessionKey","actions","loginSuccess","toast","fail","src","alt","type","ref","defaultValue","placeholder","es_button","submitLogin","connect","dispatch","bindActionCreators","CommonAction","RenderRouters","Route","path","render","App","isLoading","isLogin","activity_indicator","text","animating","Router","react","exact","Redirect","to","components_tab","page_login","common","isloading","Boolean","hostname","match","initState","banner","channel","newGoodsList","hotGoodsList","brandList","topicList","categoryList","isSuccess","initialState","getItem","userInfo","commonReducer","length","undefined","ActionTypes","LOADING_START","objectSpread","LOADING_END","CHECK_LOGIN_FAILURE","CHECK_LOGIN_SUCCESS","topicData","totalCount","currentCategory","brotherCategory","cateLogList","activeCatalogMsg","catelogId","tabIndex","count","goodsList","brandDetail","topicDetail","topicComment","topicCommentCount","topicRelateds","comment","comentCount","searchCategoryList","searchVal","sortType","page","size","priceSortStatus","searchCategoryId","collect","CombineReducers","combineReducers","home","action","actionTypes","HOME_GETDATA_SUCCESS","HOME_GETDATA_FAILURE","topic","TOPIC_GETDATA_SUCCESS","TOPIC_GETDATA_FAILURE","catrgorys","CATAGORY_NAV_GETDATA_SUCCESS","CATAGORY_NAV_GETDATA_FAILURE","goods","GOODS_COUNT_GETDATA_SUCCESS","GOODS_COUNT_GETDATA_FAILURE","GOODS_LIST_GETDATA_SUCCESS","GOODS_LIST_GETDATA_FAILURE","catalog","CATALOG_INITDATA_GETDATA_SUCCESS","CATALOG_INITDATA_GETDATA_FAILURE","CATALOG_CATALOGMSG_GETDATA_SUCCESS","CATALOG_CATALOGMSG_GETDATA_FAILURE","CATALOG_CHANGEIDANDTABINDEX","brand","BRAND_DETAIL_GETDATA_SUCCESS","BRAND_DETAIL_GETDATA_FAILURE","TOPOICDETAIL_GETDATA_SUCCESS","TOPOICDETAIL_GETDATA_FAILURE","COMMENT_GETDATA_SUCCESS","COMMENT_GETDATA_FAILURE","goodsSearch","GOODSSEARCH_GETDATA_SUCCESS","GOODSSEARCH_GETDATA_FAILURE","GOODSSEARCH_RESET_STATE","GOODSSEARCH_CHANGE_SEARCHVAL_PARMAS","GOODSSEARCH_CHANGE_SORT_PARMAS","GOODSSEARCH_CHANGE_CATEGORYID_PARMAS","GOODSSEARCH_CHANGE_PARMAS","COLLECT_GETDATA_SUCCESS","COLLECT_GETDATA_FAILURE","requestBefore","callback","params","put","ActionsTypes","delegateYield","scrollTo","root","getHomeData","t0","_marked","_context2","takeLatest","HOME_GETDATA_REQUEST","_marked2","getTopicData","parmas","topic_marked","TOPIC_GETDATA_REQUEST","topic_marked2","categorysNav","getCategoryNavData","categorys_marked","CATAGORY_NAV_GETDATA_REQUEST","categorys_marked2","catalogInit","catalogMsg","_ref2","_currentCategory","getCatalogInitData","getCatalogMsg","id","catalog_marked","catalog_marked2","_context3","CATALOG_INITDATA_GETDATA_REQUEST","CATALOG_CATALOGMSG_GETDATA_REQUEST","_marked3","sellCount","goodsCount","getSellGoodsCount","goods_marked","getGoodsData","goods_marked2","GOODS_COUNT_GETDATA_REQUSET","GOODS_LIST_GETDATA_REQUSET","goods_marked3","brandGoods","getBrandDetail","brand_marked","BRAND_DETAIL_GETDATA_REQUSET","brand_marked2","detailData","relatedData","commentData","getTopicDetail","getTopicDetailRelated","getCommentList","valueId","typeId","topicDetail_marked","TOPOICDETAIL_GETDATA_REQUEST","topicDetail_marked2","comment_marked","COMMENT_GETDATA_REQUEST","comment_marked2","getGoodsList","filterCategory","keyword","sort","order","categoryId","goodsSearch_marked","GOODSSEARCH_GETDATA_REQUEST","goodsSearch_marked2","getLikes","isClose","collect_marked","COLLECT_GETDATA_REQUSET","collect_marked2","fork","categorys","sagas_marked","sagaMiddleware","createSagaMiddleware","store","createStore","Reducers","applyMiddleware","run","rootSaga","ReactDOM","es","page_App","getElementById","navigator","serviceWorker","ready","registration","unregister","__webpack_exports__","BRAND_GOODS_GETDATA_REQUSET","BRAND_GOODS_GETDATA_SUCCESS","BRAND_GOODS_GETDATA_FAILURE","r","startLoading","endLoading","loginFailure","_actionTypes__WEBPACK_IMPORTED_MODULE_0__","instance","axios","create","baseURL","withCredentials","getNewHeaders","x-nideshop-token","HttpUtil","resolve","reject","get","headers","catch","err","JSON","stringify","post","HttpUtils","getBrandGoods","postSetComment","getGoodsSearchMsg","getGoodsSearchKey","getDeleteGoodsSearchHistory","getGoodsDetail","getGoodsRelated","getCartNum","postDoLikes","postAddCart","getCartData","postCartCheck","postCartDelete","postCartUpdate","getAddressList","postAddAddress","postDelteAddress","postCheckOne"],"mappings":"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","file":"static/js/main.edd155cc.chunk.js","sourcesContent":["function adapt(designWidth, rem2px){\n  var d = window.document.createElement('div');\n  d.style.width = '1rem';\n  d.style.display = \"none\";\n  var head = window.document.getElementsByTagName('head')[0];\n  head.appendChild(d);\n  var defaultFontSize = parseFloat(window.getComputedStyle(d, null).getPropertyValue('width'));\n  d.remove();\n  document.documentElement.style.fontSize = window.innerWidth / designWidth * rem2px / defaultFontSize * 100 + '%';\n  var st = document.createElement('style');\n  var portrait = \"@media screen and (min-width: \"+window.innerWidth+\"px) {html{font-size:\"+ ((window.innerWidth/(designWidth/rem2px)/defaultFontSize)*100) +\"%;}}\";\n  var landscape = \"@media screen and (min-width: \"+window.innerHeight+\"px) {html{font-size:\"+ ((window.innerHeight/(designWidth/rem2px)/defaultFontSize)*100) +\"%;}}\"\n  st.innerHTML = portrait + landscape;\n  head.appendChild(st);\n  return defaultFontSize\n};\nadapt(750, 100);","import React, { Component } from \"react\";\n\nexport default function asyncComponent(importComponent) {\n  class AsyncComponent extends Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        component: null\n      };\n    }\n\n    async componentDidMount() {\n      const { default: component } = await importComponent();\n\n      this.setState({\n        component: component\n      });\n    }\n\n    render() {\n      const C = this.state.component;\n\n      return C ? <C {...this.props} /> : null;\n    }\n  }\n\n  return AsyncComponent;\n}\n","import AsyncComponent from '../components/AsyncComponent'\nconst Home = AsyncComponent(() => import('../page/home'))\nconst Topic = AsyncComponent(() => import('../page/topic'))\nconst Catelog = AsyncComponent(() => import('../page/catelog'))\nconst Cart = AsyncComponent(() => import('../page/cart'))\nconst Mine = AsyncComponent(() => import('../page/mine'))\nconst Categorys = AsyncComponent(() => import('../page/categorys'))\nconst Goods = AsyncComponent(() => import('../page/goods'))\nconst BrandDetail = AsyncComponent(() => import('../page/brandDetail'))\nconst TopicDetail = AsyncComponent(() => import('../page/topicDetail'))\nconst Comment = AsyncComponent(() => import('../page/comment'))\nconst TopicCommentWrite = AsyncComponent(() =>\n  import('../page/topicCommentWrite')\n)\nconst GoodsSearch = AsyncComponent(() => import('../page/goodsSearch'))\nconst Collect = AsyncComponent(() => import('../page/collect'))\nconst Address = AsyncComponent(() => import('../page/address'))\nconst OrderConfirm = AsyncComponent(() => import('../page/orderConfirm'))\nconst routes = [\n  {\n    name: '首页',\n    isTab: true,\n    link: '/home',\n    component: Home\n  },\n  {\n    name: '专题',\n    link: '/topic',\n    isTab: true,\n    component: Topic\n  },\n  {\n    name: '分类',\n    link: '/catelog',\n    isTab: true,\n    component: Catelog\n  },\n  {\n    name: '购物车',\n    link: '/cart',\n    isTab: true,\n    component: Cart\n  },\n  {\n    name: '我的',\n    link: '/mine',\n    isTab: true,\n    component: Mine\n  },\n  {\n    name: '分类商品',\n    link: '/categorys/:id',\n    isTab: false,\n    component: Categorys\n  },\n  {\n    name: '商品详情',\n    link: '/goods/:id',\n    isTab: false,\n    component: Goods\n  },\n  {\n    name: '制造商详情',\n    link: '/brandDetail/:id',\n    isTab: false,\n    component: BrandDetail\n  },\n  {\n    name: '专题详情',\n    link: '/topicDetail/:id',\n    isTab: false,\n    component: TopicDetail\n  },\n  {\n    name: '评论页',\n    link: '/comment/:id',\n    isTab: false,\n    component: Comment\n  },\n  {\n    name: '写专题评论',\n    link: '/topicCommentWrite/:id',\n    isTab: false,\n    component: TopicCommentWrite\n  },\n  {\n    name: '商品查询',\n    link: '/goodsSearch',\n    isTab: false,\n    component: GoodsSearch\n  },\n  {\n    name: '收藏商品',\n    link: '/collect',\n    isTab: false,\n    component: Collect\n  },\n  {\n    name: '地址管理',\n    link: '/address',\n    isTab: false,\n    component: Address\n  },\n  {\n    name: '订单确认',\n    link: '/orderConfirm',\n    isTab: false,\n    component: OrderConfirm\n  }\n]\nexport default routes\n","import React, {Component} from 'react'\nimport './index.css'\nimport { withRouter } from 'react-router-dom';\nimport routes from '../../router'\nclass Tab extends Component{\n  changeIndex(item){\n    this.props.history.push(item.url)\n  }\n  render () {\n      const { tabList,history:{location:{pathname}} } = this.props\n      let showTab = false\n      routes.forEach((item, index) => {\n        if(item.link === pathname){\n          showTab = item.isTab\n        }\n      })\n        return(\n          showTab?<nav className=\"tab\">\n            {\n              tabList.map((item, index) => (\n                <div className={pathname === item.url?'tabItem active': 'tabItem'}\n                    key={index}\n                    onClick={this.changeIndex.bind(this,item)}\n                >\n                    <div className={pathname === item.url?'itemIcon activeIcon': 'itemIcon'}>\n                        <i className={item.icon}></i>\n                    </div>\n                    <div className=\"itemName\">{item.name}</div>\n                </div>\n                ))\n            }\n            </nav>:null\n        )\n    }\n}\nexport default withRouter(Tab)\n","// import createHistory from 'history/createBrowserHistory';\nimport createHistory from 'history/createHashHistory';\nexport default createHistory();","import React, {Component} from 'react'\nimport './index.scss'\nimport { Button, Toast } from 'antd-mobile'\nimport http from '../../http'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as CommonAction from '../../redux/actions/common';\nclass Login extends Component{\n  async submitLogin () {\n    const mobile = this.refs.phoneNumber.value\n    const password = this.refs.passwords.value\n    const {errno, data, errmsg} = await  http.postLogin({mobile, password})\n    if(errno === 0){\n      window.localStorage.setItem('token', data.sessionKey)\n      window.localStorage.setItem('nideShopUser', data.mobile)\n      this.props.actions.loginSuccess()\n    } else {\n      Toast.fail(errmsg, .5)\n    }\n  }\n  render () {\n    return (\n      <div className=\"loginBox\">\n        <div className=\"logo\">\n          <img src=\"http://yanxuan.nosdn.127.net/bd139d2c42205f749cd4ab78fa3d6c60.png\" alt=\"\"/>\n        </div>\n        <div className=\"loginMain\">\n          <div className=\"inputWrap onePx_bottom\">\n            <input type=\"text\" ref=\"phoneNumber\" defaultValue={15323807318} placeholder=\"请输入手机号码\" />\n          </div>\n          <div className=\"inputWrap onePx_bottom\">\n            <input type=\"password\" ref=\"passwords\" defaultValue={123456} placeholder=\"请输入登录密码\" />\n          </div>\n          <div className=\"loginBtn\">\n            <Button type=\"primary\" onClick={this.submitLogin.bind(this)}>登录</Button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nconst mapDispatchToProps = dispatch => ({actions: bindActionCreators(CommonAction, dispatch)})\nexport default (connect(null, mapDispatchToProps)(Login))\n","import React, { Component, Fragment } from 'react';\nimport  { Router, Route, Redirect} from 'react-router-dom'\nimport Tab from '../../components/tab'\nimport history from '../../config/history';\nimport routes from '../../router'\nimport { ActivityIndicator } from 'antd-mobile';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as CommonAction from '../../redux/actions/common';\nimport Login from '../../page/login'\nconst tabList = [\n  {icon:'iconfont icon-caidaniconshouyehui',name: '首页',url:'/home'},\n  {icon:'iconfont icon-clone',name: '专题',url:'/topic'},\n  {icon:'iconfont icon-sort',name: '分类',url:'/catelog'},\n  {icon:'iconfont icon-cart',name: '购物车', url:'/cart'},\n  {icon:'iconfont icon-mine',name: '我的',url:'/mine'}\n  ]\nfunction RenderRouters({routes}) {\n  return routes.map((item) =>{\n    return(\n      <Route\n        path={item.link}\n        key={item.name}\n        render={() => (\n          <div className={item.isTab?'tabPageContent':'noTabPageContent'}>\n            <item.component />\n          </div>\n        )} />\n    )\n  })\n}\nclass App extends Component {\n  render() {\n    const {isLoading, isLogin} = this.props\n    return (\n      <div className=\"App\">\n        <ActivityIndicator\n          toast\n          text=\"loading...\"\n          animating={isLoading}\n        />\n        {\n          isLogin?\n            <Router history={history}>\n              <Fragment>\n                <Route exact path=\"/\" render={() => (\n                  <Redirect to=\"/home\" />\n                )} />\n                <RenderRouters routes={routes}></RenderRouters>\n                <Tab tabList={tabList}></Tab>\n              </Fragment>\n            </Router>:\n            <Login></Login>\n        }\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, props) => ({\n    isLoading: state.common.isloading,\n    isLogin: state.common.isLogin\n  })\n\nconst mapDispatchToProps = dispatch => ({\n    actions: bindActionCreators(CommonAction, dispatch)\n  })\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import actionTypes from '../actions/actionTypes'\n\nconst initState = {\n  banner:[],\n  channel: [],\n  newGoodsList: [],\n  hotGoodsList: [],\n  brandList: [],\n  topicList: [],\n  categoryList: [],\n  isSuccess: false\n}\nexport default function home(state = initState,action) {\n  switch (action.type){\n    case actionTypes.HOME_GETDATA_SUCCESS: return {...action.data,isSuccess: true};\n    case actionTypes.HOME_GETDATA_FAILURE: return {...state,isSuccess: false};\n    default: return state;\n  }\n}","import ActionTypes from '../actions/actionTypes';\nconst user = window.localStorage.getItem('token')\nconst initialState = {\n  isloading: false,\n  isLogin: user?true: false,\n  userInfo: null,\n};\nfunction commonReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.LOADING_START:\n      return {\n        ...state,\n        isloading: true,\n      };\n    case ActionTypes.LOADING_END:\n      return {\n        ...state,\n        isloading: false,\n      };\n    case ActionTypes.CHECK_LOGIN_FAILURE:\n      return {\n        ...state,\n        isLogin: false,\n      };\n    case ActionTypes.CHECK_LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLogin: true,\n      };\n    default:\n      return state\n  }\n}\n\n\n\n\n\nexport default commonReducer;\n","import actionTypes from '../actions/actionTypes'\n\nconst initState = {\n  topicData: [],\n  totalCount: 0\n}\nexport default function topic(state = initState,action) {\n  const {topicData, totalCount, type} = action\n  switch (type){\n    case actionTypes.TOPIC_GETDATA_SUCCESS: return {...state,topicData,totalCount};\n    case actionTypes.TOPIC_GETDATA_FAILURE: return state;\n    default: return state;\n  }\n}","import actionTypes from '../actions/actionTypes'\n\nconst initState = {\n  currentCategory:{},\n  brotherCategory: []\n}\nexport default function categorys(state = initState,action) {\n  const{type,brotherCategory,currentCategory} = action\n  switch (type){\n    case actionTypes.CATAGORY_NAV_GETDATA_SUCCESS: return {...state,currentCategory,brotherCategory};\n    case actionTypes.CATAGORY_NAV_GETDATA_FAILURE: return state;\n    default: return state;\n  }\n}","import actionTypes from '../actions/actionTypes'\n\nconst initState = {\n  cateLogList: [],\n  activeCatalogMsg: {},\n  catelogId: null,\n  tabIndex: 0\n}\nexport default function catalog(state = initState,action) {\n  const{activeCatalogMsg,cateLogList,type,catelogId,tabIndex} = action\n  switch (type){\n    case actionTypes.CATALOG_INITDATA_GETDATA_SUCCESS: return {...state,cateLogList,activeCatalogMsg};\n    case actionTypes.CATALOG_INITDATA_GETDATA_FAILURE: return state\n    case actionTypes.CATALOG_CATALOGMSG_GETDATA_SUCCESS: return {...state,activeCatalogMsg};\n    case actionTypes.CATALOG_CATALOGMSG_GETDATA_FAILURE: return state\n    case actionTypes.CATALOG_CHANGEIDANDTABINDEX: return{...state,catelogId,tabIndex}\n    default: return state;\n  }\n}","import actionTypes from '../actions/actionTypes'\n\nconst initState = {\n  count: 0,\n  goodsList: []\n}\nexport default function goods(state=initState, action) {\n  const {count,type,goodsList} = action\n  switch (type){\n    case actionTypes.GOODS_COUNT_GETDATA_SUCCESS: return {...state,count};\n    case actionTypes.GOODS_COUNT_GETDATA_FAILURE: return state;\n    case actionTypes.GOODS_LIST_GETDATA_SUCCESS: return {...state,goodsList};\n    case actionTypes.GOODS_LIST_GETDATA_FAILURE: return state;\n    default: return state\n  }\n}","import actionTypes from '../actions/actionTypes'\n\nconst initState = {\n  brandDetail: {},\n}\nexport default function brand(state = initState,action) {\n  const{brandDetail,type} = action\n  switch (type){\n    case actionTypes.BRAND_DETAIL_GETDATA_SUCCESS: return {...state,brandDetail:{...brandDetail}};\n    case actionTypes.BRAND_DETAIL_GETDATA_FAILURE: return state;\n    default: return state;\n  }\n}","import actionTypes from '../actions/actionTypes'\n\nconst initState = {\n  topicDetail: {},\n  topicComment: [],\n  topicCommentCount: 0,\n  topicRelateds: []\n}\nexport default function topicDetail(state = initState,action) {\n  const {topicDetail, topicComment, topicRelateds, type, topicCommentCount} = action\n  switch (type){\n    case actionTypes.TOPOICDETAIL_GETDATA_SUCCESS: return {topicDetail,topicComment, topicCommentCount, topicRelateds};\n    case actionTypes.TOPOICDETAIL_GETDATA_FAILURE: return state;\n    default: return state;\n  }\n}","import actionTypes from '../actions/actionTypes'\n\nconst initState = {\n  comment: [],\n  comentCount: 0\n}\nexport default function comment(state = initState,action) {\n  const {comment,comentCount, type } = action\n  switch (type){\n    case actionTypes.COMMENT_GETDATA_SUCCESS: return {comment, comentCount};\n    case actionTypes.COMMENT_GETDATA_FAILURE: return state;\n    default: return state;\n  }\n}","import actionTypes from '../actions/actionTypes'\n\nconst initState = {\n  /*\n  *  sortType: 排序： 1：默认排序，2： 按价格\n  *  searchVal: 输入框的值\n  *  page: 页数\n  *  size：每页的数量\n  *  priceSortStatus: 排序 ： 1、升序；2、降序\n  *  searchCategoryId: 查询分类id\n  *  goodsList: 查询的商品\n  *  searchCategoryList: 查询可选分类\n  * */\n  searchCategoryList: [],\n  searchVal: '',\n  sortType: 1,\n  page: 1,\n  size: 100,\n  priceSortStatus: 0,\n  searchCategoryId: 0,\n  goodsList: []\n}\nexport default function goodsSearch(state=initState, action) {\n  const {searchCategoryList, searchCategoryId, goodsList, searchVal,sortType,page,size, priceSortStatus, type} = action\n  switch (type){\n    case actionTypes.GOODSSEARCH_GETDATA_SUCCESS: return {...state, searchCategoryList, goodsList, searchCategoryId}\n    case actionTypes.GOODSSEARCH_GETDATA_FAILURE: return state\n    case actionTypes.GOODSSEARCH_RESET_STATE: return {...initState}\n    case actionTypes.GOODSSEARCH_CHANGE_SEARCHVAL_PARMAS: return {...state, searchVal, page: 1, size: 100}\n    case actionTypes.GOODSSEARCH_CHANGE_SORT_PARMAS: return {...state, sortType, priceSortStatus, page: 1, size: 100}\n    case actionTypes.GOODSSEARCH_CHANGE_CATEGORYID_PARMAS: return {...state, searchCategoryId, page: 1, size: 100}\n    case actionTypes.GOODSSEARCH_CHANGE_PARMAS: return {goodsList, searchCategoryList, searchVal, sortType, page, size, priceSortStatus, searchCategoryId}\n    default: return state\n  }\n}","import actionTypes from '../actions/actionTypes'\n\nconst initState = {\n  collect: []\n}\nexport default function home(state = initState,action) {\n  switch (action.type){\n    case actionTypes.COLLECT_GETDATA_SUCCESS: return {collect:action.data};\n    case actionTypes.COLLECT_GETDATA_FAILURE: return state;\n    default: return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport home from './home'\nimport common from './common'\nimport topic from './topic'\nimport catrgorys from './categorys'\nimport catalog from './catalog'\nimport goods from './goods'\nimport brand from './brand'\nimport topicDetail from './topicDetail'\nimport comment from './comment'\nimport goodsSearch from './goodsSearch'\nimport collect from './collect'\nconst CombineReducers = combineReducers({\n  home,\n  common,\n  topic,\n  catrgorys,\n  goods,\n  catalog,\n  brand,\n  topicDetail,\n  comment,\n  goodsSearch,\n  collect\n})\n\nexport default CombineReducers;\n","import { put } from 'redux-saga/effects';\n\nimport ActionsTypes from '../actions/actionTypes';\n// import api from '../../constants/Api/api';\n// import request from '../../constants/Api/request';\nexport function requestBefore(callback) {\n  return function*(params) {\n    yield put({\n      type: ActionsTypes.LOADING_START,\n    });\n    if (callback) {\n      yield* callback(params);\n      window.scrollTo(0,0)\n    }\n    yield put({\n      type: ActionsTypes.LOADING_END,\n    });\n  }\n}","import http from '../../http'\nimport { all, call, put, takeLatest } from 'redux-saga/effects';\nimport actionTypes from '../actions/actionTypes'\nimport { requestBefore } from \"./request\";\nexport function* home() {\n  try {\n    const data = yield call(http.getHomeData,{});\n    yield put({\n      type: actionTypes.HOME_GETDATA_SUCCESS,\n      data\n    })\n  } catch (err) {\n    yield put({\n      type: actionTypes.HOME_GETDATA_FAILURE,\n    })\n  }\n}\n\nexport default function* root() {\n  yield all([\n    takeLatest(actionTypes.HOME_GETDATA_REQUEST, requestBefore(home))\n  ]);\n}","import http from '../../http'\nimport { all, call, put, takeLatest } from 'redux-saga/effects';\nimport actionTypes from '../actions/actionTypes'\nimport {requestBefore} from './request'\nexport function* topic(action) {\n  try {\n    const data = yield call(http.getTopicData,action.parmas);\n    yield put({\n      type: actionTypes.TOPIC_GETDATA_SUCCESS,\n      topicData:data.data,\n      totalCount:data.count\n    })\n  } catch (err) {\n    yield put({\n      type: actionTypes.TOPIC_GETDATA_FAILURE,\n    })\n  }\n}\n\nexport default function* root() {\n  yield all([\n    takeLatest(actionTypes.TOPIC_GETDATA_REQUEST, requestBefore(topic))\n  ]);\n}","import http from '../../http'\nimport { all, call, put, takeLatest } from 'redux-saga/effects';\nimport actionTypes from '../actions/actionTypes'\nimport { requestBefore } from \"./request\";\nexport function* categorysNav(action) {\n  try {\n    const data = yield call(http.getCategoryNavData,action.parmas);\n    yield put({\n      type: actionTypes.CATAGORY_NAV_GETDATA_SUCCESS,\n      ...data\n    })\n  } catch (err) {\n    yield put({\n      type: actionTypes.CATAGORY_NAV_GETDATA_FAILURE,\n    })\n  }\n}\n\nexport default function* root() {\n  yield all([\n    takeLatest(actionTypes.CATAGORY_NAV_GETDATA_REQUEST, requestBefore(categorysNav))\n  ]);\n}","import http from '../../http'\nimport { all, call, put, takeLatest } from 'redux-saga/effects';\nimport actionTypes from '../actions/actionTypes'\nimport { requestBefore } from \"./request\";\nexport function* catalogInit(action) {\n  try {\n    const {categoryList,currentCategory} = yield call(http.getCatalogInitData,{});\n    // catelogId非NULL,则刷新当前catelogId分类数据\n    if(action.parmas.catelogId){\n      const {currentCategory} = yield call(http.getCatalogMsg,{id:action.parmas.catelogId});\n      yield put({\n        type: actionTypes.CATALOG_INITDATA_GETDATA_SUCCESS,\n        activeCatalogMsg: currentCategory,\n        cateLogList:categoryList,\n      })\n    }else{\n      yield put({\n        type: actionTypes.CATALOG_INITDATA_GETDATA_SUCCESS,\n        cateLogList:categoryList,\n        activeCatalogMsg: currentCategory\n      })\n    }\n  } catch (err) {\n    yield put({\n      type: actionTypes.CATALOG_INITDATA_GETDATA_FAILURE,\n    })\n  }\n}\n\nexport function* catalogMsg(action) {\n  try {\n    const data = yield call(http.getCatalogMsg,action.parmas);\n    const {currentCategory} = data\n    yield put({\n      type: actionTypes.CATALOG_CATALOGMSG_GETDATA_SUCCESS,\n      activeCatalogMsg: currentCategory\n    })\n  } catch (err) {\n    yield put({\n      type: actionTypes.CATALOG_CATALOGMSG_GETDATA_FAILURE,\n    })\n  }\n}\n\nexport default function* root() {\n  yield all([\n    takeLatest(actionTypes.CATALOG_INITDATA_GETDATA_REQUEST, requestBefore(catalogInit)),\n    takeLatest(actionTypes.CATALOG_CATALOGMSG_GETDATA_REQUEST, requestBefore(catalogMsg))\n  ]);\n}","import http from '../../http'\nimport { all, call, put, takeLatest } from 'redux-saga/effects';\nimport actionTypes from '../actions/actionTypes'\nimport { requestBefore } from \"./request\";\nexport function* sellCount() {\n  try {\n    const data = yield call(http.getSellGoodsCount,{});\n    const {goodsCount} = data\n    yield put({\n      type: actionTypes.GOODS_COUNT_GETDATA_SUCCESS,\n      count: goodsCount\n    })\n  } catch (err) {\n    yield put({\n      type: actionTypes.GOODS_COUNT_GETDATA_FAILURE,\n    })\n  }\n}\n\nexport function* goodsList(action) {\n  try {\n    const data = yield call(http.getGoodsData,action.parmas);\n    yield put({\n      type: actionTypes.GOODS_LIST_GETDATA_SUCCESS,\n      goodsList: data.goodsList\n    })\n  } catch (err) {\n    yield put({\n      type: actionTypes.GOODS_LIST_GETDATA_FAILURE,\n    })\n  }\n}\n\nexport default function* root() {\n  yield all([\n    takeLatest(actionTypes.GOODS_COUNT_GETDATA_REQUSET, requestBefore(sellCount)),\n    takeLatest(actionTypes.GOODS_LIST_GETDATA_REQUSET, requestBefore(goodsList))\n  ]);\n}","import http from '../../http'\nimport { all, call, put, takeLatest } from 'redux-saga/effects';\nimport actionTypes from '../actions/actionTypes'\nimport { requestBefore } from \"./request\";\nexport function* brandGoods(action) {\n  try {\n    yield put({\n      type: actionTypes.BRAND_DETAIL_GETDATA_SUCCESS,\n      brandDetail:{name:'制造商详情'}\n    })\n    const data = yield call(http.getBrandDetail,action.parmas);\n    yield put({\n      type: actionTypes.BRAND_DETAIL_GETDATA_SUCCESS,\n      brandDetail:data.brand\n    })\n  } catch (err) {\n    yield put({\n      type: actionTypes.BRAND_DETAIL_GETDATA_FAILURE,\n    })\n  }\n}\n\nexport default function* root() {\n  yield all([\n    takeLatest(actionTypes.BRAND_DETAIL_GETDATA_REQUSET, requestBefore(brandGoods))\n  ]);\n}","import http from '../../http'\nimport { all, call, put, takeLatest } from 'redux-saga/effects';\nimport actionTypes from '../actions/actionTypes'\nimport {requestBefore} from './request'\nexport function* topicDetail(action) {\n  try {\n    const detailData = yield call(http.getTopicDetail,{id: action.id});\n    const relatedData = yield call(http.getTopicDetailRelated,{id: action.id});\n    const commentData = yield call(http.getCommentList,{valueId: action.id, typeId: 1, size: 5, page: 1});\n    yield put({\n      type: actionTypes.TOPOICDETAIL_GETDATA_SUCCESS,\n      topicDetail:detailData,\n      topicRelateds:relatedData,\n      topicCommentCount: commentData.count,\n      topicComment: commentData.data\n    })\n  } catch (err) {\n    yield put({\n      type: actionTypes.TOPOICDETAIL_GETDATA_FAILURE,\n    })\n  }\n}\n\nexport default function* root() {\n  yield all([\n    takeLatest(actionTypes.TOPOICDETAIL_GETDATA_REQUEST, requestBefore(topicDetail))\n  ]);\n}","import http from '../../http'\nimport { all, call, put, takeLatest } from 'redux-saga/effects';\nimport actionTypes from '../actions/actionTypes'\nimport {requestBefore} from './request'\nexport function* comment({id, page, size, typeId}) {\n  try {\n    const commentData = yield call(http.getCommentList,{valueId: id, typeId, size, page});\n    yield put({\n      type: actionTypes.COMMENT_GETDATA_SUCCESS,\n      comment: commentData.data,\n      comentCount: commentData.count\n    })\n  } catch (err) {\n    yield put({\n      type: actionTypes.COMMENT_GETDATA_FAILURE,\n    })\n  }\n}\n\nexport default function* root() {\n  yield all([\n    takeLatest(actionTypes.COMMENT_GETDATA_REQUEST, requestBefore(comment))\n  ]);\n}","import http from '../../http'\nimport { all, call, put, takeLatest } from 'redux-saga/effects';\nimport actionTypes from '../actions/actionTypes'\nimport { requestBefore } from \"./request\";\nexport function* getGoodsList({parmas}) {\n  try {\n    const {searchVal,size,page, sortType, priceSortStatus, searchCategoryId, searchCategoryList } = parmas\n    const {data, filterCategory} = yield call(http.getGoodsData,{\n        keyword: searchVal,\n        page,\n        size,\n        sort: sortType === 1 ? 'id': 'price',\n        order: priceSortStatus > 0 ? 'asc': priceSortStatus === 0 ? 'default' : 'desc',\n        categoryId: searchCategoryId\n      });\n    yield put({\n      type: actionTypes.GOODSSEARCH_GETDATA_SUCCESS,\n      goodsList: data,\n      searchCategoryList: searchCategoryList? searchCategoryList: filterCategory,\n      searchCategoryId: searchCategoryList?searchCategoryId: filterCategory[0].id\n    })\n  } catch (err) {\n    yield put({\n      type: actionTypes.GOODSSEARCH_GETDATA_FAILURE,\n    })\n  }\n}\nexport default function* root() {\n  yield all([\n    takeLatest(actionTypes.GOODSSEARCH_GETDATA_REQUEST, requestBefore(getGoodsList)),\n  ]);\n}","import http from '../../http'\nimport { all, call, put, takeLatest } from 'redux-saga/effects';\nimport actionTypes from '../actions/actionTypes'\nimport { requestBefore } from \"./request\";\nexport function* collect() {\n  try {\n    const data = yield call(http.getLikes,{typeId:0,size: 1000});\n    data.forEach((item) => {\n      item.isClose = true\n    })\n    yield put({\n      type: actionTypes.COLLECT_GETDATA_SUCCESS,\n      data\n    })\n  } catch (err) {\n    yield put({\n      type: actionTypes.COLLECT_GETDATA_FAILURE,\n    })\n  }\n}\n\nexport default function* root() {\n  yield all([\n    takeLatest(actionTypes.COLLECT_GETDATA_REQUSET, requestBefore(collect))\n  ]);\n}\n","import { all, fork } from 'redux-saga/effects';\nimport home from './home';\nimport topic from './topic';\nimport categorys from './categorys';\nimport catalog from './catalog'\nimport goods from './goods'\nimport brand from './brand'\nimport topicDetail from './topicDetail'\nimport comment from './comment'\nimport goodsSearch from './goodsSearch'\nimport collect from './collect'\nexport default function* root() {\n  yield all([\n    fork(home),\n    fork(topic),\n    fork(categorys),\n    fork(catalog),\n    fork(goods),\n    fork(brand),\n    fork(topicDetail),\n    fork(comment),\n    fork(goodsSearch),\n    fork(collect)\n  ]);\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './assets/common.scss'\nimport './assets/reset.css'\nimport './config/rem'\nimport App from './page/App'\nimport * as serviceWorker from './serviceWorker'\nimport { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport { Provider } from 'react-redux'\nimport Reducers from './redux/reducers'\nimport rootSaga from './redux/sagas'\n\n// 修改了reducer请更新版本号！！！\n// const LoadData = newVersion => {\n//   const easyMarket_version =\n//     JSON.parse(localStorage.getItem('easyMarket_version')) || ''\n//   let initData = undefined\n//   if (newVersion === easyMarket_version) {\n//     initData = JSON.parse(localStorage.getItem('easyMarket_initData'))\n//   } else {\n//     localStorage.setItem('easyMarket_version', newVersion)\n//   }\n//   return initData\n// }\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  Reducers,\n  // LoadData(4),\n  applyMiddleware(sagaMiddleware)\n)\n\nsagaMiddleware.run(rootSaga)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// window.onbeforeunload = () => {\n//   const state = store.getState()\n//   localStorage.setItem('easyMarket_initData', JSON.stringify(state))\n// }\n\nserviceWorker.unregister()\n","export default {\n  /*\n  * 登录\n  * COMMON\n  * CHECK_LOGIN_SUCCESS：登录成功\n  * CHECK_LOGIN_FAILURE：登录失败\n  * */\n  CHECK_LOGIN_FAILURE: 'CHECK_LOGIN_FAILURE',\n  CHECK_LOGIN_SUCCESS: 'CHECK_LOGIN_SUCCESS',\n  /*\n  * 加载状态\n  * COMMON\n  * Loading开始\n  * Loading结束\n  * */\n  LOADING_START: 'LOADING_START',\n  LOADING_END: 'LOADING_END',\n\n  /*\n  * HOME\n  * 首页\n  * HOME_GETDATA_REQUEST: 首页数据请求\n  * HOME_GETDATA_SUCCESS：首页数据请求成功\n  * HOME_GETDATA_FAILURE：首页数据请求失败\n  * */\n  HOME_GETDATA_REQUEST: 'HOME_GETDATA_REQUEST',\n  HOME_GETDATA_SUCCESS: 'HOME_GETDATA_SUCCESS',\n  HOME_GETDATA_FAILURE: 'HOME_GETDATA_FAILURE',\n\n  /*\n  * 专题\n  * TOPOIC\n  * TOPIC_GETDATA_REQUEST: 专题数据请求\n  * TOPIC_GETDATA_SUCCESS：专题数据请求成功\n  * TOPIC_GETDATA_FAILURE：专题数据请求失败\n  * */\n  TOPIC_GETDATA_REQUEST: 'TOPIC_GETDATA_REQUEST',\n  TOPIC_GETDATA_SUCCESS: 'TOPIC_GETDATA_SUCCESS',\n  TOPIC_GETDATA_FAILURE: 'TOPIC_GETDATA_FAILURE',\n\n  /*\n  * 专题详情\n  * TOPOICDETAIL\n  * TOPOICDETAIL_GETDATA_REQUEST: 专题数据请求\n  * TOPOICDETAIL_GETDATA_SUCCESS：专题数据请求成功\n  * TOPOICDETAIL_GETDATA_FAILURE：专题数据请求失败\n  * */\n  TOPOICDETAIL_GETDATA_REQUEST: 'TOPOICDETAIL_GETDATA_REQUEST',\n  TOPOICDETAIL_GETDATA_SUCCESS: 'TOPOICDETAIL_GETDATA_SUCCESS',\n  TOPOICDETAIL_GETDATA_FAILURE: 'TOPOICDETAIL_GETDATA_FAILURE',\n\n  /*\n  * 评论\n  * COMMENT\n  * COMMENT_GETDATA_REQUEST: 评论请求\n  * COMMENT_GETDATA_SUCCESS：评论请求成功\n  * COMMENT_GETDATA_FAILURE：评论请求失败\n  * */\n  COMMENT_GETDATA_REQUEST: 'COMMENT_GETDATA_REQUEST',\n  COMMENT_GETDATA_SUCCESS: 'COMMENT_GETDATA_SUCCESS',\n  COMMENT_GETDATA_FAILURE: 'COMMENT_GETDATA_FAILURE',\n\n  /*\n  * 精选分类Tab\n  * CATAGORY\n  * CATAGORY_NAV_GETDATA_REQUEST: 分类Tab数据请求\n  * CATAGORY_NAV_GETDATA_SUCCESS：分类Tab请求成功\n  * CATAGORY_NAV_GETDATA_FAILURE：分类Tab请求失败\n  * */\n  CATAGORY_NAV_GETDATA_REQUEST: 'CATAGORY_NAV_GETDATA_REQUEST',\n  CATAGORY_NAV_GETDATA_SUCCESS: 'CATAGORY_NAV_GETDATA_SUCCESS',\n  CATAGORY_NAV_GETDATA_FAILURE: 'CATAGORY_NAV_GETDATA_FAILURE',\n\n  /*\n  * CATALOG\n  * 分类页中初始化tab数据和当前分类数据\n  * CATALOG_INITDATA_GETDATA_REQUEST: 数据请求\n  * CATALOG_INITDATA_GETDATA_SUCCESS: 请求成功\n  * CATALOG_INITDATA_GETDATA_FAILURE: 请求失败\n  * */\n  CATALOG_INITDATA_GETDATA_REQUEST: 'CATALOG_INITDATA_GETDATA_REQUEST',\n  CATALOG_INITDATA_GETDATA_SUCCESS: 'CATALOG_INITDATA_GETDATA_SUCCESS',\n  CATALOG_INITDATA_GETDATA_FAILURE: 'CATALOG_INITDATA_GETDATA_FAILURE',\n\n  /*\n  * CATALOG\n  * 根据分类ID获取当前商品分类信息跟子分类\n  * CATALOG_CATALOGMSG_GETDATA_REQUEST: 数据请求\n  * CATALOG_CATALOGMSG_GETDATA_SUCCESS: 请求成功\n  * CATALOG_CATALOGMSG_GETDATA_FAILURE: 请求失败\n  * */\n  CATALOG_CATALOGMSG_GETDATA_REQUEST: 'CATALOG_CATALOGMSG_GETDATA_REQUEST',\n  CATALOG_CATALOGMSG_GETDATA_SUCCESS: 'CATALOG_CATALOGMSG_GETDATA_SUCCESS',\n  CATALOG_CATALOGMSG_GETDATA_FAILURE: 'CATALOG_CATALOGMSG_GETDATA_FAILURE',\n\n  /*\n  * CATALOG\n  * 修改分类页面的请求分类ID跟当前TabIndex值\n  * */\n  CATALOG_CHANGEIDANDTABINDEX: 'CATALOG_CHANGEIDANDTABINDEX',\n\n  /*\n  * GOODS\n  * 在售商品数量\n  * GOODS_COUNT_GETDATA_REQUSET: 数据请求\n  * GOODS_COUNT_GETDATA_SUCCESS: 请求成功\n  * GOODS_COUNT_GETDATA_FAILURE: 请求失败\n  * */\n  GOODS_COUNT_GETDATA_REQUSET: 'GOODS_COUNT_GETDATA_REQUSET',\n  GOODS_COUNT_GETDATA_SUCCESS: 'GOODS_COUNT_GETDATA_SUCCESS',\n  GOODS_COUNT_GETDATA_FAILURE: 'GOODS_COUNT_GETDATA_FAILURE',\n  /*\n  * GOODSSEARCH\n  * 商品查询\n  * GOODSSEARCH_GETDATA_SUCCESS: 数据请求成功\n  * GOODSSEARCH_GETDATA_REQUEST: 请求\n  * GOODSSEARCH_GETDATA_FAILURE：失败\n  * GOODSSEARCH_CHANGE_PARMAS: 修改请求参数\n  * GOODSSEARCH_RESET_STATE: 还原初始化数据\n  * GOODSSEARCH_CHANGE_SEARCHVAL_PARMAS: 修改查询的input的值\n  * GOODSSEARCH_CHANGE_SORT_PARMAS: 修改排序类别\n  * GOODSSEARCH_CHANGE_CATEGORYID_PARMAS: 修改分类\n  * */\n  GOODSSEARCH_GETDATA_SUCCESS: 'GOODSSEARCH_GETDATA_SUCCESS',\n  GOODSSEARCH_GETDATA_REQUEST: 'GOODSSEARCH_GETDATA_REQUEST',\n  GOODSSEARCH_GETDATA_FAILURE: 'GOODSSEARCH_GETDATA_FAILURE',\n  GOODSSEARCH_CHANGE_PARMAS: 'GOODSSEARCH_CHANGE_PARMAS',\n  GOODSSEARCH_RESET_STATE: 'GOODSSEARCH_RESET_STATE',\n  GOODSSEARCH_CHANGE_SEARCHVAL_PARMAS: 'GOODSSEARCH_CHANGE_SEARCHVAL_PARMAS',\n  GOODSSEARCH_CHANGE_SORT_PARMAS: 'GOODSSEARCH_CHANGE_SORT_PARMAS',\n  GOODSSEARCH_CHANGE_CATEGORYID_PARMAS: 'GOODSSEARCH_CHANGE_CATEGORYID_PARMAS',\n  /*\n  * GOODS\n  * 获取商品数据\n  * GOODS_LIST_GETDATA_REQUSET: 数据请求\n  * GOODS_LIST_GETDATA_SUCCESS: 请求成功\n  * GOODS_LIST_GETDATA_FAILURE: 请求失败\n  * */\n  GOODS_LIST_GETDATA_REQUSET: 'GOODS_LIST_GETDATA_REQUSET',\n  GOODS_LIST_GETDATA_SUCCESS: 'GOODS_LIST_GETDATA_SUCCESS',\n  GOODS_LIST_GETDATA_FAILURE: 'GOODS_LIST_GETDATA_FAILURE',\n\n  /*\n  * BRAND\n  * 制造商详情\n  * BRAND_DETAIL_GETDATA_REQUSET: 数据请求\n  * BRAND_DETAIL_GETDATA_SUCCESS: 请求成功\n  * BRAND_DETAIL_GETDATA_FAILURE: 请求失败\n  * */\n  BRAND_DETAIL_GETDATA_REQUSET: 'BRAND_DETAIL_GETDATA_REQUSET',\n  BRAND_DETAIL_GETDATA_SUCCESS: 'BRAND_DETAIL_GETDATA_SUCCESS',\n  BRAND_DETAIL_GETDATA_FAILURE: 'BRAND_DETAIL_GETDATA_FAILURE',\n\n  /*\n  * BRAND\n  * 制造商相关商品\n  * BRAND_GOODS_GETDATA_REQUSET: 数据请求\n  * BRAND_GOODS_GETDATA_SUCCESS: 请求成功\n  * BRAND_GOODS_GETDATA_FAILURE: 请求失败\n  * */\n  BRAND_GOODS_GETDATA_REQUSET: 'BRAND_GOODS_GETDATA_REQUSET',\n  BRAND_GOODS_GETDATA_SUCCESS: 'BRAND_GOODS_GETDATA_SUCCESS',\n  BRAND_GOODS_GETDATA_FAILURE: 'BRAND_GOODS_GETDATA_FAILURE',\n\n  /*\n  * COLLECT\n  * 已收藏商品\n  * COLLECT_GETDATA_REQUSET: 数据请求\n  * COLLECT_GETDATA_SUCCESS: 请求成功\n  * COLLECT_GETDATA_FAILURE: 请求失败\n  * */\n  COLLECT_GETDATA_REQUSET: 'COLLECT_GETDATA_REQUSET',\n  COLLECT_GETDATA_SUCCESS: 'COLLECT_GETDATA_SUCCESS',\n  COLLECT_GETDATA_FAILURE: 'COLLECT_GETDATA_FAILURE'\n}\n","import ActionsTypes from './actionTypes';\n\nexport function startLoading() {\n  return {\n    type: ActionsTypes.LOADING_START,\n  }\n}\n\nexport function endLoading() {\n  return {\n    type: ActionsTypes.LOADING_END,\n  }\n}\n\nexport function loginSuccess() {\n  return {\n    type: ActionsTypes.CHECK_LOGIN_SUCCESS,\n  }\n}\n\nexport function loginFailure() {\n  return {\n    type: ActionsTypes.CHECK_LOGIN_FAILURE,\n  }\n}\n\n\n\n\n","import axios from 'axios'\nconst instance = axios.create({\n  baseURL: '/api',\n  withCredentials: true // 跨域类型时是否在请求中协带cookie\n})\nconst getNewHeaders = () =>{\n  return {'x-nideshop-token': window.localStorage.getItem('token')}\n}\nexport default class HttpUtil {\n  static get (url, params = {}) {\n    return new Promise((resolve, reject) => {\n      instance.get(url, { params, headers: getNewHeaders() },).then(({ data }) => {\n        if(data.errno === 0){\n          resolve(data.data)\n        }else{\n          resolve(data)\n        }\n      }).catch((err) => {\n        reject({ err: JSON.stringify(err) })\n      })\n    })\n  }\n  static post (url, params = {}) {\n    return new Promise((resolve, reject) => {\n      instance.post(url, { ...params },{headers: getNewHeaders()}).then(({ data }) => {\n        resolve(data)\n      }).catch((err) => {\n        reject({ err: JSON.stringify(err) })\n      })\n    })\n  }\n}\n","import HttpUtils from './http'\nclass Https {\n  /*\n   * 登录\n   * parmas:\n   *   mobile: 电话号码\n   *   password: 密码\n   * */\n  postLogin = parmas => HttpUtils.post('/auth/loginByMobile', parmas)\n\n  //获取首页数据\n  getHomeData = params => HttpUtils.get('/', params)\n\n  /*\n   *  获取专题数据\n   *  parmas:\n   *   page: 当前页数\n   *   size: 每页数据量\n   * */\n  getTopicData = parmas => HttpUtils.get('/topic/list', parmas)\n\n  /*\n   * 根据专题Id获取专题详情\n   * parmas:\n   *   id: 专题id\n   * */\n  getTopicDetail = parmas => HttpUtils.get('/topic/detail', parmas)\n\n  /*\n   * 根据专题Id获取相关专题\n   * parmas:\n   *   id: 专题id\n   * */\n  getTopicDetailRelated = parmas => HttpUtils.get('/topic/related', parmas)\n\n  /*\n   * 根据专题ID或者商品ID获取评论获取相关专题\n   * parmas:\n   *   valueId: 专题id、商品id\n   *  typeId：1:专题id、0:商品id\n   *  page:\n   *  size:\n   * */\n  getCommentList = parmas => HttpUtils.get('/comment/list', parmas)\n\n  /*\n   * 获取分类ID分类Nav数据\n   * params:\n   *   id: 当前分类Id\n   * */\n  getCategoryNavData = parmas => HttpUtils.get('/goods/category', parmas)\n\n  /*\n   *  根据分类Id或者制造商Id获取商品\n   *  parmas:\n   *   brandId: 制造商Id（非必填）\n   *   categoryId: 分类Id（非必填）\n   *   sort: id(默认排序)、price(价格排序)\n   *   order: 排序方式\n   *   page: 当前页数\n   *   size: 每页数据量\n   * */\n  getGoodsData = parmas => HttpUtils.get('/goods/list', parmas)\n\n  /*\n   * 分类页初始化信息获取\n   * */\n  getCatalogInitData = parmas => HttpUtils.get('/catalog/index', parmas)\n\n  /*\n   * 根据分类ID获取当前分类信息和子分类\n   * parmas:\n   *   id: 分类Id\n   * */\n  getCatalogMsg = parmas => HttpUtils.get('/catalog/current', parmas)\n\n  /*\n   * 获取在售商品数量\n   * */\n  getSellGoodsCount = parmas => HttpUtils.get('/goods/count', parmas)\n\n  /*\n   * 根据制造商ID获取制造商详情\n   * parmas:\n   *   id: 制造商Id\n   * */\n  getBrandDetail = parmas => HttpUtils.get('/brand/detail', parmas)\n\n  /*\n   * 根据制造商ID获取制造商相关商品（同根据分类ID获取商品）\n   * parmas:\n   *   id: 制造商Id\n   *   page: 当前页数\n   *   size: 每页数据量\n   * */\n  getBrandGoods = parmas => HttpUtils.get('/brand/detail', parmas)\n\n  /*\n   * 对某个商品或专题ID进行评论\n   * parmas:\n   *   content: 内容\n   *   typeId: 类型\n   *   valueId: id\n   * */\n  postSetComment = parmas => HttpUtils.post('/comment/post', parmas)\n\n  /*\n   * 获取商品查询的相关信息\n   * parmas: {}\n   * */\n  getGoodsSearchMsg = (parmas = {}) => HttpUtils.get('/search/index', parmas)\n\n  /*\n   * 商品查询模糊查询关键字\n   * parmas:\n   *  keyword: 查询名称\n   * */\n  getGoodsSearchKey = (parmas = {}) => HttpUtils.get('/search/helper', parmas)\n\n  /*\n   * 删除商品查询的历史记录\n   * parmas: {}\n   * */\n  getDeleteGoodsSearchHistory = (parmas = {}) =>\n    HttpUtils.get('/search/clearhistory', parmas)\n\n  /*\n   * 获取商品详情\n   * /api/goods/detail\n   * parmas:\n   *   id: 商品id\n   * */\n  getGoodsDetail = (parmas = {}) => HttpUtils.get('/goods/detail', parmas)\n\n  /*\n   * 相关商品\n   * /api/goods/related\n   * parmas:\n   *   id: 商品id\n   * */\n  getGoodsRelated = (parmas = {}) => HttpUtils.get('/goods/related', parmas)\n\n  /*\n   * 获取用户购物车商品数量\n   * /api/cart/goodscount\n   * parmas:\n   * */\n  getCartNum = (parmas = {}) => HttpUtils.get('/cart/goodscount', parmas)\n\n  /*\n   * 是否添加到收藏栏\n   * /api/collect/addordelete\n   * parmas:\n   *   typeId: 0：是 、1:否（商品状态）\n   *   valueId: 商品Id\n   * */\n  postDoLikes = parmas => HttpUtils.post('/collect/addordelete', parmas)\n\n  /*\n   * 查询收藏栏商品\n   * /api/collect/list\n   * parmas:\n   *   typeId: 0：否 、1:是\n   * */\n  getLikes = parmas => HttpUtils.get('/collect/list', parmas)\n\n  /*\n   * 添加到购物车\n   * /api/cart/add\n   * parmas:\n   *   goodsId: 商品Id\n   *   number: 数量\n   *   productId: 产品价格ID\n   * */\n  postAddCart = parmas => HttpUtils.post('/cart/add', parmas)\n\n  /*\n   * 获取用户购物车数据\n   * /api/cart/index\n   * parmas:\n   * */\n  getCartData = (parmas = {}) => HttpUtils.get('/cart/index', parmas)\n\n  /*\n   * 购物车商品是否选中\n   * /api/cart/checked\n   * parmas:\n   *   isChecked: 是否选中(1:是，0否)\n   *   productIds： 商品产品Id\n   * */\n  postCartCheck = (parmas = {}) => HttpUtils.post('/cart/checked', parmas)\n\n  /*\n   * 删除购物车商品\n   * /api/cart/delete\n   * parmas:\n   *   productIds： 商品产品Id\n   * */\n  postCartDelete = (parmas = {}) => HttpUtils.post('/cart/delete', parmas)\n\n  /*\n   * 删除购物车商品\n   * /api/cart/update\n   * parmas:\n   *   productIds： 商品产品Id\n   * */\n  postCartUpdate = (parmas = {}) => HttpUtils.post('/cart/update', parmas)\n\n  /*\n   * 获取用户地址数据\n   * /api/address/list\n   * */\n  getAddressList = (parmas = {}) => HttpUtils.get('/address/list', parmas)\n\n  /*\n   * 新增地址\n   * /api/address/save\n   * parmas:\n   * id: 地址ID\n   * */\n  postAddAddress = (parmas = {}) => HttpUtils.post('/address/save', parmas)\n\n  /*\n   * 获取删除地址数据\n   * /api/address/delete\n   * parmas:\n   * id: 地址ID\n   * */\n  postDelteAddress = (parmas = {}) => HttpUtils.post('/address/delete', parmas)\n\n  /*\n   * 获取删除地址数据\n   * /api/address/delete\n   * parmas:\n   * id: 地址ID\n   * */\n  postCheckOne = (parmas = {}) => HttpUtils.post('/cart/checkOne', parmas)\n}\nexport default new Https()\n"],"sourceRoot":""}